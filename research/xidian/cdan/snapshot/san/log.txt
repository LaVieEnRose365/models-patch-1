{'method': 'CDAN', 'gpu': '0', 'num_iterations': 100004, 'source_iters': 80, 'test_interval': 2000, 'snapshot_interval': 5000, 'output_for_test': True, 'output_path': 'snapshot/san', 'out_file': <_io.TextIOWrapper name='snapshot/san/log.txt' mode='w' encoding='UTF-8'>, 'prep': {'test_10crop': False, 'params': {'resize_size': 256, 'crop_size': 224, 'alexnet': False}}, 'loss': {'trade_off': 1.0, 'random': False, 'random_dim': 1024}, 'network': {'name': <class 'network2.ResNetFc'>, 'params': {'use_bottleneck': True, 'bottleneck_dim': 256, 'new_cls': True, 'class_num': 31}}, 'dataset': 'office', 'data': {'source': {'list_path': '../data/office/domain_adaptation_images/webcam/images', 'batch_size': 4}, 'target': {'list_path': '../data/office/domain_adaptation_images/amazon/images', 'batch_size': 4}, 'test': {'list_path': '../data/office/domain_adaptation_images/amazon/images', 'batch_size': 4}}, 'optimizer': {'type': <class 'mindspore.nn.optim.sgd.SGD'>, 'optim_params': {'momentum': 0.9, 'weight_decay': 0.001, 'nesterov': True}, 'lr_param': {'lr': 0.001, 'gamma': 0.001, 'power': 0.75}}}